<!DOCTYPE html>
<html lang="fr" dir="ltr">

<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="/css/materialize.css">
  <link rel="stylesheet" href="/css/style.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <title>Documentation</title>
</head>

<body>
  <nav class="navmargin">
    <div class="nav-wrapper">
      <ul id="nav-mobile" class="left hide-on-med-and-down">
        <li>
          <% if(typeof project != 'undefined') { %>
          <a href="/user/<%= user %>/projects/<%= project.id%>">
            <% } %>
            <i class="material-icons left">keyboard_backspace</i>Retour à la liste</a></li>

      </ul>
      <a href="/" class="brand-logo center">Gestion projets</a>
      <ul id="nav-mobile" class="right hide-on-med-and-down">
        <li><a>Bienvenue <%= user %></a></li>
        <li><a href="/logout">Déconnexion</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <div class="row">
      <div class="col s6">
        <div class="card teal lighten-2 " id="admin_drop_zone" ondrop="dropHandler(event, this);"
          ondragover="dragOverHandler(event, this);" ondragleave="dragLeaveHandler(event, this);">
          <div class="card-content white-text">
            <span class="card-title">Doc Administrateur</span>
            <p class="filenamelabel">Faites glisser un fichier texte dans cette zone</p>
            <div class="input-div">
              <input id="adminfileinput" name="adminfile" type="file" accept="text/*"
                onchange="handleFile(this.files[0], this.parentElement.parentElement.parentElement)" hidden>
              <label for="adminfileinput" class="waves-effect waves-light grey btn">Parcourir</label>
            </div>
            <div id="editor"></div>
          </div>
        </div>
        <% if (project.adminDoc && project.adminDoc.length > 0) { %>
        <a href="/user/<%= user %>/projects/<%= project.id%>/deleteDoc?type=admin" class="waves-effect waves-light btn-large red darken-4">Supprimer doc administrateur</a>
        <% } else {%>
        <a href="#" class="waves-effect waves-light btn-large disabled">Supprimer doc administrateur</a>
        <% } %>
      </div>
      <div class="col s6">
        <div class="card teal lighten-2 " id="user_drop_zone" ondrop="dropHandler(event, this);"
          ondragover="dragOverHandler(event, this);" ondragleave="dragLeaveHandler(event, this);">
          <div class="card-content white-text">
            <span class="card-title">Doc Utilisateur</span>
            <p class="filenamelabel">Faites glisser un fichier texte dans cette zone</p>
            <div class="input-div">
              <input id="userfileinput" name="userfile" type="file" accept="text/*"
                onchange="handleFile(this.files[0], this.parentElement.parentElement.parentElement)" hidden>
              <label for="userfileinput" class="waves-effect waves-light grey btn">Parcourir</label>
            </div>
            <div id="editor"></div>
          </div>
        </div>
        <% if (project.userDoc && project.userDoc.length > 0) { %>
          <a href="/user/<%= user %>/projects/<%= project.id%>/deleteDoc?type=user" class="waves-effect waves-light btn-large red darken-4">Supprimer doc utilisateur</a>
          <% } else {%>
          <a href="#" class="waves-effect waves-light btn-large disabled">Supprimer doc utilisateur</a>
          <% } %>
      </div>
    </div>
    <div class="row">
      <div class="col s2 offset-s10" onclick="submitDocs();">
        <a href="#" class="waves-effect waves-teal grey darken-3 btn-large center-align">Confirmer </a>
      </div>
    </div>
  </div>
</body>

<script src='/jquery/jquery-3.4.1.min.js'></script>

<script>
  //déclare les variables ejs
  var userLogin = "<%= user %>";
  var projectID = "<%=project.id%>";
</script>

<script>
  var adminFileContent;
  var userFileContent;

  function assignAdminDoc(result) {
    adminFileContent = result;
  }

  function assignUserDoc(result) {
    userFileContent = result;
  }

  function handleFile(file, el) {
    $(el).removeClass('lighten-2');
    $(el).addClass('darken-2');
    let element = el.querySelectorAll("p")[0];
    element.innerHTML = file.name;

    fr = new FileReader();

    if (el.id === 'admin_drop_zone') {
      fr.onload = function () {
        assignAdminDoc(fr.result);
      }
    }
    if (el.id === 'user_drop_zone') {
      fr.onload = function () {
        assignUserDoc(fr.result);
      }
    }
    fr.readAsText(file);
  }

  function dragLeaveHandler(ev, el) {
    ev.preventDefault();
    ev.stopPropagation();

    if (typeof adminFileContent == 'undefined') {
      $(el).addClass('lighten-2');
      $(el).removeClass('darken-2');
    }
  }

  function dragOverHandler(ev, el) {
    ev.preventDefault();
    ev.stopPropagation();

    $(el).removeClass('lighten-2');
    $(el).addClass('darken-2');
  }

  function dropHandler(ev, el) {
    ev.preventDefault();
    ev.stopPropagation();

    if (ev.dataTransfer.items) {
      // Use DataTransferItemList interface to access the file(s)
      if (ev.dataTransfer.items.length > 1) {
        dragLeaveHandler(ev, el);
      }
      else {
        let file = ev.dataTransfer.items[0];
        if (file.kind === 'file' && (file.type === 'text/markdown' || file.type === 'text/plain')) { //tout est ok
          let file = ev.dataTransfer.items[0].getAsFile();
          handleFile(file, el);
        }
        else {
          dragLeaveHandler(ev, el);
        }
      }
    }
  }

  function submitDocs() {
    $.post("/user/" + userLogin + "/projects/" + projectID + "/newDoc",
      {
        adminDoc: adminFileContent,
        userDoc: userFileContent
      },
      (data, status) => {
        let labels = document.querySelectorAll('.filenamelabel');
        if(data.admin) labels[0].innerHTML = 'succès';
        if(data.user) labels[1].innerHTML = 'succès';
      });
  }
</script>

</html>